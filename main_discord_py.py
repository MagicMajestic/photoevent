import os
import discord
from discord.ext import commands
from discord import app_commands
import datetime
import pytz
from dotenv import load_dotenv

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –º–æ–¥—É–ª–∏
import database
import config

load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤ –¥–ª—è –±–æ—Ç–∞
intents = discord.Intents.default()
intents.message_content = True
intents.dm_messages = True

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞ –¥–ª—è discord.py
bot = commands.Bot(command_prefix='!', intents=intents)

def is_event_active() -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –∏–≤–µ–Ω—Ç –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è."""
    try:
        start_time = datetime.datetime.fromisoformat(config.EVENT_START_TIME.replace('Z', '+00:00'))
        end_time = datetime.datetime.fromisoformat(config.EVENT_END_TIME.replace('Z', '+00:00'))
        current_time = datetime.datetime.now(pytz.UTC)
        return start_time <= current_time <= end_time
    except Exception:
        return False

def format_event_dates() -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –∏–≤–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."""
    try:
        start_time = datetime.datetime.fromisoformat(config.EVENT_START_TIME.replace('Z', '+00:00'))
        end_time = datetime.datetime.fromisoformat(config.EVENT_END_TIME.replace('Z', '+00:00'))
        start_str = start_time.strftime("%d.%m.%Y –≤ %H:%M")
        end_str = end_time.strftime("%d.%m.%Y –≤ %H:%M")
        return f"{start_str} –¥–æ {end_str}"
    except Exception:
        return "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–∞—Ç"

def get_user_tag(user_id: int) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç Discord —Ç–µ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ ID –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω."""
    try:
        user = bot.get_user(user_id)
        if user:
            return f"@{user.name}"
        else:
            return f"ID:{user_id}"
    except:
        return f"ID:{user_id}"

# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ (discord.py –≤–µ—Ä—Å–∏—è)
class RegistrationModal(discord.ui.Modal):
    def __init__(self):
        super().__init__(title='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∏–≤–µ–Ω—Ç')
        
        self.static_id = discord.ui.TextInput(
            label='–í–∞—à StaticID',
            placeholder='–í–≤–µ–¥–∏—Ç–µ –≤–∞—à StaticID',
            required=True,
            max_length=50
        )
        self.add_item(self.static_id)
        
        self.nickname = discord.ui.TextInput(
            label='–í–∞—à –∏–≥—Ä–æ–≤–æ–π Nickname',
            placeholder='–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º',
            required=True,
            max_length=50
        )
        self.add_item(self.nickname)

    async def on_submit(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
        await interaction.response.defer(ephemeral=True)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –∏–≤–µ–Ω—Ç
        if not is_event_active():
            embed = discord.Embed(
                title="‚ùå –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞",
                description=f"–ò–≤–µ–Ω—Ç –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω.\n\n–ò–≤–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç: {format_event_dates()}",
                color=config.RASPBERRY_COLOR
            )
            await interaction.followup.send(embed=embed, ephemeral=True)
            return
        
        # –ü—ã—Ç–∞–µ–º—Å—è –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–≥—Ä–æ–∫–∞
        success = database.register_player(
            discord_id=interaction.user.id,
            static_id=self.static_id.value.strip(),
            nickname=self.nickname.value.strip()
        )
        
        if success:
            embed = discord.Embed(
                title="‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!",
                description=f"–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∏–≤–µ–Ω—Ç!\n\n"
                           f"**StaticID:** {self.static_id.value}\n"
                           f"**Nickname:** {self.nickname.value}\n\n"
                           f"–¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É.",
                color=config.RASPBERRY_COLOR
            )
        else:
            embed = discord.Embed(
                title="‚ùå –û—à–∏–±–∫–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏",
                description="–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ —ç—Ç–æ—Ç –∏–≤–µ–Ω—Ç.",
                color=config.RASPBERRY_COLOR
            )
        
        await interaction.followup.send(embed=embed, ephemeral=True)

# –í–∏–¥ —Å –∫–Ω–æ–ø–∫–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
class RegistrationView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è', style=discord.ButtonStyle.primary, emoji='üìù')
    async def register_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
        modal = RegistrationModal()
        await interaction.response.send_modal(modal)

# –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
class ScreenshotSelect(discord.ui.Select):
    def __init__(self, submissions, player_info):
        self.submissions = submissions
        self.player_info = player_info
        
        options = []
        for i, submission in enumerate(submissions[:25]):  # Discord –æ–≥—Ä–∞–Ω–∏—á–∏–≤–∞–µ—Ç –¥–æ 25 –æ–ø—Ü–∏–π
            status_emoji = "‚úÖ" if submission.get('is_approved') == 1 else "‚ùå" if submission.get('is_approved') == 0 else "‚è≥"
            screenshot_number = database.get_player_screenshot_number(player_info['discord_id'], submission['submission_id'])
            options.append(discord.SelectOption(
                label=f"–°–∫—Ä–∏–Ω—à–æ—Ç #{screenshot_number}",
                description=f"{status_emoji} –û—Ç–ø—Ä–∞–≤–ª–µ–Ω: {submission['submission_time'][:16]}",
                value=str(submission['submission_id'])
            ))
        
        super().__init__(placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏...", options=options, min_values=1, max_values=1)

    async def callback(self, interaction: discord.Interaction):
        submission_id = int(self.values[0])
        submission = database.get_submission_by_id(submission_id)
        
        if not submission:
            await interaction.response.send_message("‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
            return
        
        screenshot_number = database.get_player_screenshot_number(self.player_info['discord_id'], submission_id)
        status_text = "‚úÖ –û–¥–æ–±—Ä–µ–Ω" if submission.get('is_approved') == 1 else "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω" if submission.get('is_approved') == 0 else "‚è≥ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"
        
        embed = discord.Embed(
            title=f"–°–∫—Ä–∏–Ω—à–æ—Ç #{screenshot_number} - {self.player_info['nickname']}",
            description=f"**–ò–≥—Ä–æ–∫:** @{get_user_tag(self.player_info['discord_id'])}\n"
                       f"**StaticID:** {self.player_info['static_id']}\n"
                       f"**–í—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∫–∏:** {submission['submission_time']}\n"
                       f"**–°—Ç–∞—Ç—É—Å:** {status_text}",
            color=config.RASPBERRY_COLOR
        )
        embed.set_image(url=submission['screenshot_url'])
        
        view = ScreenshotModerationView(submission_id, submission.get('is_approved'))
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)

# –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–ª—è –ø—Ä–∏—á–∏–Ω—ã –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
class RejectReasonModal(discord.ui.Modal):
    def __init__(self, submission_id, view):
        super().__init__(title='–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è')
        self.submission_id = submission_id
        self.parent_view = view
        
        self.reason = discord.ui.TextInput(
            label='–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞',
            placeholder='–í–≤–µ–¥–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è...',
            required=True,
            max_length=500,
            style=discord.TextStyle.paragraph
        )
        self.add_item(self.reason)

    async def on_submit(self, interaction: discord.Interaction):
        success = database.reject_screenshot(self.submission_id)
        
        if success:
            submission = database.get_submission_by_id(self.submission_id)
            player = database.get_player(submission['discord_id'])
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
            try:
                user = bot.get_user(submission['discord_id'])
                if user:
                    screenshot_number = database.get_player_screenshot_number(submission['discord_id'], self.submission_id)
                    embed = discord.Embed(
                        title="‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω",
                        description=f"–í–∞—à —Å–∫—Ä–∏–Ω—à–æ—Ç #{screenshot_number} –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω.\n\n**–ü—Ä–∏—á–∏–Ω–∞:** {self.reason.value}",
                        color=config.RASPBERRY_COLOR
                    )
                    await user.send(embed=embed)
            except:
                pass
            
            await interaction.response.send_message("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω, –∏–≥—Ä–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω.", ephemeral=True)
            await self.parent_view.update_parent_stats_if_needed(interaction)
        else:
            await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞.", ephemeral=True)

# –í–∏–¥ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤
class ScreenshotModerationView(discord.ui.View):
    def __init__(self, submission_id, current_status):
        super().__init__(timeout=300)
        self.submission_id = submission_id
        self.current_status = current_status

    async def update_parent_stats_if_needed(self, interaction):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ admin_stats –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ"""
        try:
            # –ü–æ–ø—ã—Ç–∫–∞ –Ω–∞–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
            pass
        except:
            pass

    @discord.ui.button(label='‚úÖ –û–¥–æ–±—Ä–∏—Ç—å', style=discord.ButtonStyle.success)
    async def approve_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        success = database.approve_screenshot(self.submission_id)
        
        if success:
            submission = database.get_submission_by_id(self.submission_id)
            player = database.get_player(submission['discord_id'])
            
            # –£–≤–µ–¥–æ–º–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
            try:
                user = bot.get_user(submission['discord_id'])
                if user:
                    screenshot_number = database.get_player_screenshot_number(submission['discord_id'], self.submission_id)
                    embed = discord.Embed(
                        title="‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –æ–¥–æ–±—Ä–µ–Ω",
                        description=f"–í–∞—à —Å–∫—Ä–∏–Ω—à–æ—Ç #{screenshot_number} –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω!",
                        color=config.RASPBERRY_COLOR
                    )
                    await user.send(embed=embed)
            except:
                pass
            
            await interaction.response.send_message("‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –æ–¥–æ–±—Ä–µ–Ω, –∏–≥—Ä–æ–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω.", ephemeral=True)
            await self.update_parent_stats_if_needed(interaction)
        else:
            await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞.", ephemeral=True)

    @discord.ui.button(label='‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', style=discord.ButtonStyle.danger)
    async def reject_button(self, interaction: discord.Interaction, button: discord.ui.Button):
        modal = RejectReasonModal(self.submission_id, self)
        await interaction.response.send_modal(modal)

# –í—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –∏–≥—Ä–æ–∫–æ–≤ —Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π
class PlayerSelect(discord.ui.Select):
    def __init__(self, players_data, page=0):
        self.players_data = players_data
        self.page = page
        self.per_page = 25
        
        start_idx = page * self.per_page
        end_idx = start_idx + self.per_page
        current_players = players_data[start_idx:end_idx]
        
        options = []
        for player in current_players:
            discord_id, nickname, total_screenshots, approved_count = player
            user_tag = get_user_tag(discord_id)
            options.append(discord.SelectOption(
                label=f"{user_tag} - {nickname}",
                description=f"‚úÖ{approved_count} ‚ùå{total_screenshots-approved_count} ‚è≥0",
                value=str(discord_id)
            ))
        
        super().__init__(placeholder=f"–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞ (—Å—Ç—Ä. {page+1})...", options=options, min_values=1, max_values=1)

    async def callback(self, interaction: discord.Interaction):
        discord_id = int(self.values[0])
        player = database.get_player(discord_id)
        submissions = database.get_player_submissions(discord_id)
        
        if not player:
            await interaction.response.send_message("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
            return
        
        user_tag = get_user_tag(discord_id)
        approved_count = sum(1 for s in submissions if s.get('is_approved') == 1)
        rejected_count = sum(1 for s in submissions if s.get('is_approved') == 0)
        pending_count = sum(1 for s in submissions if s.get('is_approved') is None)
        
        embed = discord.Embed(
            title=f"–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞: {player['nickname']}",
            description=f"**Discord:** {user_tag}\n"
                       f"**StaticID:** {player['static_id']}\n"
                       f"**–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:** {player['registration_time'][:16]}\n\n"
                       f"**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤:**\n"
                       f"‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ: {approved_count}\n"
                       f"‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ: {rejected_count}\n"
                       f"‚è≥ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏: {pending_count}\n"
                       f"üìä –í—Å–µ–≥–æ: {len(submissions)}",
            color=config.RASPBERRY_COLOR
        )
        
        view = PlayerProfileView(submissions, player)
        await interaction.response.send_message(embed=embed, view=view, ephemeral=True)

# –í–∏–¥ –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞
class PlayerProfileView(discord.ui.View):
    def __init__(self, submissions, player_info):
        super().__init__(timeout=300)
        self.add_item(ScreenshotSelect(submissions, player_info))

# –û—Å–Ω–æ–≤–Ω–æ–π –≤–∏–¥ —Å–æ —Å–ø–∏—Å–∫–æ–º –∏–≥—Ä–æ–∫–æ–≤
class PlayerListView(discord.ui.View):
    def __init__(self, players_data):
        super().__init__(timeout=300)
        self.players_data = players_data
        self.current_page = 0
        self.max_page = (len(players_data) - 1) // 25
        
        self.add_item(PlayerSelect(players_data, self.current_page))
        self.update_navigation_buttons()

    def update_navigation_buttons(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        # –û—á–∏—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        for item in self.children[:]:
            if isinstance(item, discord.ui.Button):
                self.remove_item(item)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        if self.max_page > 0:
            prev_button = discord.ui.Button(
                label='‚óÄÔ∏è –ù–∞–∑–∞–¥',
                style=discord.ButtonStyle.secondary,
                disabled=(self.current_page == 0)
            )
            prev_button.callback = self.prev_page
            self.add_item(prev_button)
            
            next_button = discord.ui.Button(
                label='–í–ø–µ—Ä–µ–¥ ‚ñ∂Ô∏è',
                style=discord.ButtonStyle.secondary,
                disabled=(self.current_page == self.max_page)
            )
            next_button.callback = self.next_page
            self.add_item(next_button)

    async def prev_page(self, interaction: discord.Interaction):
        """–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
        if self.current_page > 0:
            self.current_page -= 1
            await self.update_page(interaction)

    async def next_page(self, interaction: discord.Interaction):
        """–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
        if self.current_page < self.max_page:
            self.current_page += 1
            await self.update_page(interaction)

    async def update_page(self, interaction: discord.Interaction):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –Ω–æ–≤—ã–º —Å–ø–∏—Å–∫–æ–º –∏–≥—Ä–æ–∫–æ–≤"""
        # –û–±–Ω–æ–≤–ª—è–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫
        for item in self.children[:]:
            if isinstance(item, PlayerSelect):
                self.remove_item(item)
        
        self.add_item(PlayerSelect(self.players_data, self.current_page))
        self.update_navigation_buttons()
        
        await interaction.response.edit_message(view=self)

@bot.event
async def on_ready():
    """–°–æ–±—ã—Ç–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞."""
    print(f"{bot.user} –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Discord!")
    database.setup_database()
    print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")
    
    # –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º —Å–ª—ç—à-–∫–æ–º–∞–Ω–¥—ã —Å Discord
    try:
        if config.GUILD_ID:
            guild = discord.Object(id=config.GUILD_ID)
            bot.tree.copy_global_to(guild=guild)
            await bot.tree.sync(guild=guild)
            print(f"–ö–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞ {config.GUILD_ID}")
        else:
            await bot.tree.sync()
            print("–ö–æ–º–∞–Ω–¥—ã —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –≥–ª–æ–±–∞–ª—å–Ω–æ")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ —Å–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∞—Ü–∏–∏ –∫–æ–º–∞–Ω–¥: {e}")

@bot.tree.command(name="start", description="–ù–∞—á–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é –Ω–∞ –∏–≤–µ–Ω—Ç")
async def start_registration(interaction: discord.Interaction):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –∏–≤–µ–Ω—Ç."""
    embed = discord.Embed(
        title="üéÆ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ –∏–≤–µ–Ω—Ç!",
        description=f"**–ü–µ—Ä–∏–æ–¥ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è:** {format_event_dates()}\n\n"
                   f"–î–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∏–≤–µ–Ω—Ç–µ –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –∏ –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.",
        color=config.RASPBERRY_COLOR
    )
    
    view = RegistrationView()
    await interaction.response.send_message(embed=embed, view=view, ephemeral=True)

@bot.event
async def on_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö (–ø—Ä–∏–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤)."""
    # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –±–æ—Ç–æ–≤
    if message.author.bot:
        return
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    if not isinstance(message.channel, discord.DMChannel):
        await bot.process_commands(message)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –ª–∏ –∏–≥—Ä–æ–∫
    player = database.get_player(message.author.id)
    if not player:
        embed = discord.Embed(
            title="‚ùå –ù–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω",
            description="–í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã –Ω–∞ –∏–≤–µ–Ω—Ç. –°–Ω–∞—á–∞–ª–∞ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–π—Ç–µ—Å—å –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ –∫–æ–º–∞–Ω–¥–æ–π `/start`.",
            color=config.RASPBERRY_COLOR
        )
        await message.channel.send(embed=embed)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω–µ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω –ª–∏ –∏–≥—Ä–æ–∫
    if database.is_player_disqualified(message.author.id):
        embed = discord.Embed(
            title="‚ùå –î–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è",
            description="–í—ã –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã –∏ –Ω–µ –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å —Å–∫—Ä–∏–Ω—à–æ—Ç—ã.",
            color=config.RASPBERRY_COLOR
        )
        await message.channel.send(embed=embed)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –∏–≤–µ–Ω—Ç
    if not is_event_active():
        embed = discord.Embed(
            title="‚ùå –ò–≤–µ–Ω—Ç –Ω–µ–∞–∫—Ç–∏–≤–µ–Ω",
            description=f"–ò–≤–µ–Ω—Ç –Ω–µ –∞–∫—Ç–∏–≤–µ–Ω –≤ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç.\n\n–ò–≤–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç: {format_event_dates()}",
            color=config.RASPBERRY_COLOR
        )
        await message.channel.send(embed=embed)
        return
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –≤–ª–æ–∂–µ–Ω–∏–π (—Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤)
    if not message.attachments:
        embed = discord.Embed(
            title="üì∑ –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç",
            description="–ü—Ä–∏–∫—Ä–µ–ø–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –∫ —Å–æ–æ–±—â–µ–Ω–∏—é –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∏–≤–µ–Ω—Ç–µ.",
            color=config.RASPBERRY_COLOR
        )
        await message.channel.send(embed=embed)
        return
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–µ—Ä–≤–æ–µ –≤–ª–æ–∂–µ–Ω–∏–µ –∫–∞–∫ —Å–∫—Ä–∏–Ω—à–æ—Ç
    attachment = message.attachments[0]
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
    if not any(attachment.filename.lower().endswith(ext) for ext in ['.png', '.jpg', '.jpeg', '.gif', '.webp']):
        embed = discord.Embed(
            title="‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç",
            description="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ (PNG, JPG, JPEG, GIF, WEBP).",
            color=config.RASPBERRY_COLOR
        )
        await message.channel.send(embed=embed)
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    success = database.add_submission(player['id'], attachment.url)
    
    if success:
        submissions_count = len(database.get_player_submissions(message.author.id))
        embed = discord.Embed(
            title="‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–∏–Ω—è—Ç!",
            description=f"–í–∞—à —Å–∫—Ä–∏–Ω—à–æ—Ç #{submissions_count} —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –º–æ–¥–µ—Ä–∞—Ü–∏—é.\n\n"
                       f"–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞—Ö –ø—Ä–æ–≤–µ—Ä–∫–∏.",
            color=config.RASPBERRY_COLOR
        )
    else:
        embed = discord.Embed(
            title="‚ùå –û—à–∏–±–∫–∞",
            description="–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            color=config.RASPBERRY_COLOR
        )
    
    await message.channel.send(embed=embed)
    await bot.process_commands(message)

async def has_admin_permissions(interaction: discord.Interaction) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ."""
    if not interaction.guild:
        return False
    
    # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–∞ —á–µ—Ä–µ–∑ interaction
    member = interaction.user
    if hasattr(member, 'guild_permissions') and member.guild_permissions:
        return member.guild_permissions.administrator
    
    # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–± - –ø–æ–ª—É—á–∞–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞ —á–µ—Ä–µ–∑ guild
    try:
        guild_member = interaction.guild.get_member(interaction.user.id)
        if guild_member:
            return guild_member.guild_permissions.administrator
            
        # –ï—Å–ª–∏ get_member –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º fetch_member
        guild_member = await interaction.guild.fetch_member(interaction.user.id)
        if guild_member:
            return guild_member.guild_permissions.administrator
    except:
        pass
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–æ–ª–∏ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
    try:
        if hasattr(interaction.user, 'roles'):
            for role in interaction.user.roles:
                if role.permissions.administrator:
                    return True
    except:
        pass
    
    return False

@bot.tree.command(name="admin_stats", description="–ü–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≤–µ–Ω—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)")
async def admin_stats(interaction: discord.Interaction):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≤–µ–Ω—Ç–∞."""
    # –î–∏–∞–≥–Ω–æ—Å—Ç–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
    debug_info = f"User: {interaction.user}\nGuild: {interaction.guild}\n"
    if interaction.guild:
        try:
            member = interaction.guild.get_member(interaction.user.id)
            if member:
                debug_info += f"Member found: {member}\nAdmin perms: {member.guild_permissions.administrator}\n"
                debug_info += f"Roles: {[role.name for role in member.roles]}\n"
            else:
                debug_info += "Member not found with get_member\n"
        except Exception as e:
            debug_info += f"Error getting member: {e}\n"
    
    has_perms = await has_admin_permissions(interaction)
    if not has_perms:
        await interaction.response.send_message(
            f"‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.\n\n–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞:\n```{debug_info}```", 
            ephemeral=True
        )
        return
    
    await interaction.response.defer(ephemeral=True)
    
    # –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    total_players = database.get_all_players_stats()
    approved_stats = database.get_approved_screenshots_stats()
    leaderboard = database.get_leaderboard_by_approved()
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–æ–ø-5 –∏–≥—Ä–æ–∫–æ–≤
    top_players_text = ""
    for i, (discord_id, nickname, total_screenshots, approved_count) in enumerate(leaderboard[:5], 1):
        user_tag = get_user_tag(discord_id)
        top_players_text += f"{i}. {user_tag} - {nickname} (‚úÖ{approved_count})\n"
    
    if not top_players_text:
        top_players_text = "–ù–µ—Ç –∏–≥—Ä–æ–∫–æ–≤"
    
    embed = discord.Embed(
        title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≤–µ–Ω—Ç–∞",
        description=f"**–í—Å–µ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤:** {total_players}\n"
                   f"**–ü–µ—Ä–∏–æ–¥ –∏–≤–µ–Ω—Ç–∞:** {format_event_dates()}\n"
                   f"**–°—Ç–∞—Ç—É—Å:** {'üü¢ –ê–∫—Ç–∏–≤–µ–Ω' if is_event_active() else 'üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω'}\n\n"
                   f"**–¢–æ–ø-5 –∏–≥—Ä–æ–∫–æ–≤:**\n{top_players_text}",
        color=config.RASPBERRY_COLOR
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∏–≥—Ä–æ–∫–∏
    if leaderboard:
        view = PlayerListView(leaderboard)
        await interaction.followup.send(embed=embed, view=view, ephemeral=True)
    else:
        await interaction.followup.send(embed=embed, ephemeral=True)

@bot.tree.command(name="admin_profile", description="–ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ø—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)")
async def admin_profile(interaction: discord.Interaction, user: discord.Member):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞."""
    if not await has_admin_permissions(interaction):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        return
    
    await interaction.response.defer(ephemeral=True)
    
    player = database.get_player(user.id)
    if not player:
        await interaction.followup.send("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–∞ –∏–≤–µ–Ω—Ç.", ephemeral=True)
        return
    
    submissions = database.get_player_submissions(user.id)
    user_tag = get_user_tag(user.id)
    
    approved_count = sum(1 for s in submissions if s.get('is_approved') == 1)
    rejected_count = sum(1 for s in submissions if s.get('is_approved') == 0)
    pending_count = sum(1 for s in submissions if s.get('is_approved') is None)
    
    embed = discord.Embed(
        title=f"–ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞: {player['nickname']}",
        description=f"**Discord:** {user_tag}\n"
                   f"**StaticID:** {player['static_id']}\n"
                   f"**–î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏:** {player['registration_time'][:16]}\n\n"
                   f"**–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤:**\n"
                   f"‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ: {approved_count}\n"
                   f"‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ: {rejected_count}\n"
                   f"‚è≥ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏: {pending_count}\n"
                   f"üìä –í—Å–µ–≥–æ: {len(submissions)}",
        color=config.RASPBERRY_COLOR
    )
    
    if submissions:
        view = PlayerProfileView(submissions, player)
        await interaction.followup.send(embed=embed, view=view, ephemeral=True)
    else:
        await interaction.followup.send(embed=embed, ephemeral=True)

@bot.tree.command(name="admin_disqualify", description="–î–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è/–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)")
async def admin_disqualify(interaction: discord.Interaction, user: discord.Member, action: str):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏/—Å–Ω—è—Ç–∏—è –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–≥—Ä–æ–∫–∞."""
    if not await has_admin_permissions(interaction):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        return
    
    if action not in ["disqualify", "cancel"]:
        await interaction.response.send_message("‚ùå –ù–µ–≤–µ—Ä–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ 'disqualify' –∏–ª–∏ 'cancel'.", ephemeral=True)
        return
    
    player = database.get_player(user.id)
    if not player:
        await interaction.response.send_message("‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –Ω–∞ –∏–≤–µ–Ω—Ç.", ephemeral=True)
        return
    
    if action == "disqualify":
        success = database.disqualify_player(user.id)
        action_text = "–¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω"
        notification_title = "‚ùå –í—ã –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã"
        notification_desc = "–í—ã –±—ã–ª–∏ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã —Å –∏–≤–µ–Ω—Ç–∞. –í–∞—à–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –±–æ–ª—å—à–µ –Ω–µ –∑–∞—Å—á–∏—Ç—ã–≤–∞—é—Ç—Å—è."
    else:
        success = database.cancel_disqualification(user.id)
        action_text = "–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
        notification_title = "‚úÖ –î–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è —Å–Ω—è—Ç–∞"
        notification_desc = "–í–∞—à–∞ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –±—ã–ª–∞ —Å–Ω—è—Ç–∞. –í—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —É—á–∞—Å—Ç–∏–µ –≤ –∏–≤–µ–Ω—Ç–µ."
    
    if success:
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∏–≥—Ä–æ–∫–∞
        try:
            embed_notification = discord.Embed(
                title=notification_title,
                description=notification_desc,
                color=config.RASPBERRY_COLOR
            )
            await user.send(embed=embed_notification)
        except:
            pass
        
        await interaction.response.send_message(f"‚úÖ –ò–≥—Ä–æ–∫ {user.mention} {action_text}.", ephemeral=True)
    else:
        await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–ø–µ—Ä–∞—Ü–∏–∏.", ephemeral=True)

@bot.tree.command(name="calculate_payments", description="–†–∞—Å—á–µ—Ç –≤—ã–ø–ª–∞—Ç –∏–≥—Ä–æ–∫–∞–º (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)")
async def calculate_payments(interaction: discord.Interaction):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤—ã–ø–ª–∞—Ç."""
    if not await has_admin_permissions(interaction):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        return
    
    await interaction.response.defer(ephemeral=True)
    
    approved_stats = database.get_approved_screenshots_stats()
    
    if not approved_stats:
        await interaction.followup.send("‚ùå –ù–µ—Ç –∏–≥—Ä–æ–∫–æ–≤ —Å –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–º–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º–∏.", ephemeral=True)
        return
    
    payment_text = "**–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–ø–ª–∞—Ç:**\n\n"
    
    for discord_id, nickname, static_id, approved_count in approved_stats:
        if approved_count > 0:
            amount = approved_count * 10000  # 10,000 –∑–∞ –∫–∞–∂–¥—ã–π –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç
            payment_text += f"/givemoney {static_id} {amount}\n"
    
    if len(payment_text) > 1900:  # –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ Discord
        # –†–∞–∑–±–∏–≤–∞–µ–º –Ω–∞ —á–∞—Å—Ç–∏
        chunks = []
        lines = payment_text.split('\n')
        current_chunk = "**–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–ø–ª–∞—Ç:**\n\n"
        
        for line in lines[2:]:  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫
            if len(current_chunk + line + '\n') > 1900:
                chunks.append(current_chunk)
                current_chunk = line + '\n'
            else:
                current_chunk += line + '\n'
        
        if current_chunk.strip():
            chunks.append(current_chunk)
        
        for i, chunk in enumerate(chunks):
            if i == 0:
                await interaction.followup.send(f"```{chunk}```", ephemeral=True)
            else:
                await interaction.followup.send(f"```{chunk}```", ephemeral=True)
    else:
        await interaction.followup.send(f"```{payment_text}```", ephemeral=True)

@bot.tree.command(name="reset_stats", description="–°–±—Ä–æ—Å –≤—Å–µ—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤)")
async def reset_statistics(interaction: discord.Interaction):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤—Å–µ—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫."""
    if not await has_admin_permissions(interaction):
        await interaction.response.send_message("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        return
    
    view = ResetConfirmationView()
    await interaction.response.send_message(
        "‚ö†Ô∏è **–í–ù–ò–ú–ê–ù–ò–ï!** –í—ã —Å–æ–±–∏—Ä–∞–µ—Ç–µ—Å—å —É–¥–∞–ª–∏—Ç—å –≤—Å–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –ø—Ä–æ—Ñ–∏–ª–∏ –∏–≥—Ä–æ–∫–æ–≤.\n"
        "–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–æ–±—Ä–∞—Ç–∏–º–æ. –í—ã —É–≤–µ—Ä–µ–Ω—ã?",
        view=view,
        ephemeral=True
    )

class ResetConfirmationView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=30)

    @discord.ui.button(label='‚úÖ –î–∞, —Å–±—Ä–æ—Å–∏—Ç—å', style=discord.ButtonStyle.danger)
    async def confirm_reset(self, interaction: discord.Interaction, button: discord.ui.Button):
        success = database.reset_all_statistics()
        
        if success:
            await interaction.response.send_message("‚úÖ –í—Å–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ —É—Å–ø–µ—à–Ω–æ —Å–±—Ä–æ—à–µ–Ω—ã.", ephemeral=True)
        else:
            await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫.", ephemeral=True)

    @discord.ui.button(label='‚ùå –û—Ç–º–µ–Ω–∞', style=discord.ButtonStyle.secondary)
    async def cancel_reset(self, interaction: discord.Interaction, button: discord.ui.Button):
        await interaction.response.send_message("–°–±—Ä–æ—Å –æ—Ç–º–µ–Ω–µ–Ω.", ephemeral=True)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    token = config.BOT_TOKEN
    if not token:
        print("‚ùå –û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        exit(1)
    
    bot.run(token)