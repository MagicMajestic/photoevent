import os
import discord
import datetime
import pytz
from dotenv import load_dotenv

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –º–æ–¥—É–ª–∏
import database
import config

load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤ –¥–ª—è –±–æ—Ç–∞
intents = discord.Intents.default()
intents.message_content = True
intents.dm_messages = True

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
bot = discord.Bot(intents=intents)

def is_event_active() -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –∏–≤–µ–Ω—Ç –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è."""
    try:
        start_time = datetime.datetime.fromisoformat(config.EVENT_START_TIME.replace('Z', '+00:00'))
        end_time = datetime.datetime.fromisoformat(config.EVENT_END_TIME.replace('Z', '+00:00'))
        current_time = datetime.datetime.now(pytz.UTC)
        return start_time <= current_time <= end_time
    except Exception:
        return False

def format_event_dates() -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –∏–≤–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."""
    try:
        start_time = datetime.datetime.fromisoformat(config.EVENT_START_TIME.replace('Z', '+00:00'))
        end_time = datetime.datetime.fromisoformat(config.EVENT_END_TIME.replace('Z', '+00:00'))
        start_str = start_time.strftime("%d.%m.%Y –≤ %H:%M")
        end_str = end_time.strftime("%d.%m.%Y –≤ %H:%M")
        return f"{start_str} –¥–æ {end_str}"
    except Exception:
        return "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–∞—Ç"

class RegistrationModal(discord.ui.Modal):
    def __init__(self):
        super().__init__(title="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∏–≤–µ–Ω—Ç")
        
    static_id = discord.ui.InputText(
        label='–í–∞—à StaticID',
        placeholder='–í–≤–µ–¥–∏—Ç–µ –≤–∞—à StaticID',
        required=True,
        max_length=50
    )
    
    nickname = discord.ui.InputText(
        label='–í–∞—à –∏–≥—Ä–æ–≤–æ–π Nickname',
        placeholder='–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º',
        required=True,
        max_length=50
    )

    async def callback(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
        try:
            static_id_value = self.static_id.value.strip() if self.static_id.value else None
            nickname_value = self.nickname.value.strip() if self.nickname.value else None
            
            if not static_id_value or not nickname_value:
                await interaction.response.send_message("‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!", ephemeral=True)
                return

            success = database.register_player(interaction.user.id, static_id_value, nickname_value)
            
            if success:
                embed = discord.Embed(
                    title="‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!",
                    description=f"**StaticID:** {static_id_value}\n**Nickname:** {nickname_value}\n\n**–ü–µ—Ä–∏–æ–¥ –∏–≤–µ–Ω—Ç–∞:** {format_event_dates()}",
                    color=config.RASPBERRY_COLOR
                )
                embed.add_field(
                    name="üì© –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤",
                    value="–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–≤–µ–Ω—Ç–∞.",
                    inline=False
                )
                await interaction.response.send_message(embed=embed, ephemeral=True)
            else:
                await interaction.response.send_message("‚ùå –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", ephemeral=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.", ephemeral=True)

class RegistrationView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", style=discord.ButtonStyle.primary)
    async def register_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
        try:
            player = database.get_player(interaction.user.id)
            if player:
                await interaction.response.send_message("‚ùå –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", ephemeral=True)
                return
            
            modal = RegistrationModal()
            await interaction.response.send_modal(modal)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∫–Ω–æ–ø–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

@bot.event
async def on_ready():
    """–°–æ–±—ã—Ç–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞."""
    print(f'{bot.user} –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Discord!')
    database.setup_database()
    print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")

@bot.slash_command(name='start', description='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∏–≤–µ–Ω—Ç –ø–æ–∏—Å–∫–∞ –ª–æ–∫–∞—Ü–∏–π', guild_ids=[config.GUILD_ID])
async def start_registration(ctx):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –∏–≤–µ–Ω—Ç."""
    try:
        embed = discord.Embed(
            title="***–ò–≤–µ–Ω—Ç –ø–æ–∏—Å–∫–∞ –ª–æ–∫–∞—Ü–∏–π***",
            description="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –∏–≤–µ–Ω—Ç!",
            color=config.RASPBERRY_COLOR
        )
        
        view = RegistrationView()
        await ctx.respond(embed=embed, view=view, ephemeral=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start: {e}")
        await ctx.respond("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

@bot.event
async def on_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö (–ø—Ä–∏–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤)."""
    try:
        if message.guild is not None or message.author == bot.user:
            return
        
        player = database.get_player(message.author.id)
        if not player:
            return
        
        if database.is_player_disqualified(message.author.id):
            await message.reply("‚ùå –í—ã –±—ã–ª–∏ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã.")
            return
        
        if not is_event_active():
            await message.reply("‚è∞ –°–æ–±—ã—Ç–∏–µ —Å–µ–π—á–∞—Å –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ.")
            return
        
        if not message.attachments:
            return
        
        valid_extensions = ['.png', '.jpg', '.jpeg', '.gif', '.webp']
        attachment = message.attachments[0]
        
        if not any(attachment.filename.lower().endswith(ext) for ext in valid_extensions):
            await message.reply("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG, JPG, JPEG, GIF –∏–ª–∏ WebP.")
            return
        
        success = database.add_submission(player['id'], attachment.url)
        
        if success:
            submissions = database.get_player_submissions(message.author.id)
            count = len(submissions)
            
            embed = discord.Embed(
                title="‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–∏–Ω—è—Ç!",
                description=f"–í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤: **{count}**\n–°—Ç–∞—Ç—É—Å: ‚è≥ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
                color=config.RASPBERRY_COLOR
            )
            embed.set_image(url=attachment.url)
            
            await message.reply(embed=embed)
        else:
            await message.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def has_admin_permissions(ctx) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ."""
    if not ctx.guild:
        return False
    
    if not ctx.author.guild_permissions.administrator:
        await ctx.respond("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", ephemeral=True)
        return False
    
    return True

@bot.slash_command(name='admin_stats', description='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≤–µ–Ω—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)', guild_ids=[config.GUILD_ID])
async def admin_stats(ctx):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≤–µ–Ω—Ç–∞."""
    try:
        if not await has_admin_permissions(ctx):
            return
        
        total_players = database.get_all_players_stats()
        leaderboard = database.get_leaderboard()
        
        # –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_submissions = sum(player[2] for player in leaderboard)
        
        embed = discord.Embed(
            title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≤–µ–Ω—Ç–∞",
            color=config.RASPBERRY_COLOR
        )
        embed.add_field(name="üë• –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤", value=str(total_players), inline=True)
        embed.add_field(name="üèÜ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤", value=str(len(leaderboard)), inline=True)
        embed.add_field(name="üì∏ –í—Å–µ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤", value=str(total_submissions), inline=True)
        embed.add_field(name="üìÖ –ü–µ—Ä–∏–æ–¥ –∏–≤–µ–Ω—Ç–∞", value=format_event_dates(), inline=False)
        embed.add_field(name="‚è∞ –°—Ç–∞—Ç—É—Å", value="üü¢ –ê–∫—Ç–∏–≤–µ–Ω" if is_event_active() else "üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω", inline=True)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-5 –∏–≥—Ä–æ–∫–æ–≤
        if leaderboard:
            top_players = leaderboard[:5]
            top_text = ""
            for i, (discord_id, nickname, count) in enumerate(top_players, 1):
                top_text += f"{i}. {nickname} - {count} —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤\n"
            embed.add_field(name="üèÜ –¢–æ–ø-5 –∏–≥—Ä–æ–∫–æ–≤", value=top_text or "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", inline=False)
        
        await ctx.respond(embed=embed, ephemeral=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /admin_stats: {e}")
        await ctx.respond("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

@bot.slash_command(name='admin_profile', description='–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)', guild_ids=[config.GUILD_ID])
async def admin_profile(ctx, user: discord.Member):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞."""
    try:
        if not await has_admin_permissions(ctx):
            return
        
        player = database.get_player(user.id)
        if not player:
            await ctx.respond(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.", ephemeral=True)
            return
        
        submissions = database.get_player_submissions(user.id)
        
        embed = discord.Embed(
            title=f"üë§ –ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞",
            color=config.RASPBERRY_COLOR
        )
        embed.add_field(name="–ù–∏–∫–Ω–µ–π–º", value=player['nickname'], inline=True)
        embed.add_field(name="Discord", value=f"@{user.name}", inline=True)
        embed.add_field(name="StaticID", value=player['static_id'], inline=True)
        embed.add_field(name="–°–∫—Ä–∏–Ω—à–æ—Ç–æ–≤", value=str(len(submissions)), inline=True)
        embed.add_field(name="–°—Ç–∞—Ç—É—Å", value="‚ùå –î–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" if player['is_disqualified'] else "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω", inline=True)
        
        await ctx.respond(embed=embed, ephemeral=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /admin_profile: {e}")
        await ctx.respond("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

@bot.slash_command(name='admin_disqualify', description='–î–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –∏–≥—Ä–æ–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)', guild_ids=[config.GUILD_ID])
async def admin_disqualify(ctx, user: discord.Member):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–≥—Ä–æ–∫–∞."""
    try:
        if not await has_admin_permissions(ctx):
            return
        
        player = database.get_player(user.id)
        if not player:
            await ctx.respond(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.", ephemeral=True)
            return
        
        success = database.disqualify_player(user.id)
        
        if success:
            embed = discord.Embed(
                title="‚ö†Ô∏è –ò–≥—Ä–æ–∫ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω",
                description=f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –±—ã–ª –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω.\n–í—Å–µ –µ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –ø–æ–º–µ—á–µ–Ω—ã –∫–∞–∫ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ.",
                color=0xFF0000
            )
            await ctx.respond(embed=embed, ephemeral=True)
        else:
            await ctx.respond("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏.", ephemeral=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /admin_disqualify: {e}")
        await ctx.respond("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    token = config.BOT_TOKEN
    if token == "YOUR_BOT_TOKEN_HERE":
        print("Error: Please set BOT_TOKEN in environment variables")
    else:
        bot.run(token)