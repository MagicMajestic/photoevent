import os
import discord
import datetime
import pytz
from dotenv import load_dotenv

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –Ω–∞—à–∏ –º–æ–¥—É–ª–∏
import database
import config

load_dotenv()

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ–Ω—Ç–æ–≤ –¥–ª—è –±–æ—Ç–∞
intents = discord.Intents.default()
intents.message_content = True
intents.dm_messages = True

# –°–æ–∑–¥–∞–Ω–∏–µ —ç–∫–∑–µ–º–ø–ª—è—Ä–∞ –±–æ—Ç–∞
bot = discord.Bot(intents=intents)

def is_event_active() -> bool:
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –∞–∫—Ç–∏–≤–µ–Ω –ª–∏ –∏–≤–µ–Ω—Ç –≤ –Ω–∞—Å—Ç–æ—è—â–µ–µ –≤—Ä–µ–º—è."""
    try:
        start_time = datetime.datetime.fromisoformat(config.EVENT_START_TIME.replace('Z', '+00:00'))
        end_time = datetime.datetime.fromisoformat(config.EVENT_END_TIME.replace('Z', '+00:00'))
        current_time = datetime.datetime.now(pytz.UTC)
        return start_time <= current_time <= end_time
    except Exception:
        return False

def format_event_dates() -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—ã –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –∏–≤–µ–Ω—Ç–∞ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è."""
    try:
        start_time = datetime.datetime.fromisoformat(config.EVENT_START_TIME.replace('Z', '+00:00'))
        end_time = datetime.datetime.fromisoformat(config.EVENT_END_TIME.replace('Z', '+00:00'))
        start_str = start_time.strftime("%d.%m.%Y –≤ %H:%M")
        end_str = end_time.strftime("%d.%m.%Y –≤ %H:%M")
        return f"{start_str} –¥–æ {end_str}"
    except Exception:
        return "–û—à–∏–±–∫–∞ –≤ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏ –¥–∞—Ç"

def get_user_tag(user_id: int) -> str:
    """–ü–æ–ª—É—á–∞–µ—Ç Discord —Ç–µ–≥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–ª–∏ ID –µ—Å–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω."""
    try:
        user = bot.get_user(user_id)
        if user:
            return f"@{user.name}"
        else:
            return f"ID:{user_id}"
    except:
        return f"ID:{user_id}"

class RegistrationModal(discord.ui.Modal):
    def __init__(self):
        super().__init__(title="–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∏–≤–µ–Ω—Ç")
        
        self.static_id = discord.ui.InputText(
            label='–í–∞—à StaticID',
            placeholder='–í–≤–µ–¥–∏—Ç–µ –≤–∞—à StaticID',
            required=True,
            max_length=50
        )
        
        self.nickname = discord.ui.InputText(
            label='–í–∞—à –∏–≥—Ä–æ–≤–æ–π Nickname',
            placeholder='–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –∏–≥—Ä–æ–≤–æ–π –Ω–∏–∫–Ω–µ–π–º',
            required=True,
            max_length=50
        )
        
        self.add_item(self.static_id)
        self.add_item(self.nickname)

    async def callback(self, interaction: discord.Interaction):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
        try:
            static_id_value = self.static_id.value.strip() if self.static_id.value else None
            nickname_value = self.nickname.value.strip() if self.nickname.value else None
            
            if not static_id_value or not nickname_value:
                await interaction.response.send_message("‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –ø–æ–ª—è!", ephemeral=True)
                return

            success = database.register_player(interaction.user.id, static_id_value, nickname_value)
            
            if success:
                embed = discord.Embed(
                    title="‚úÖ –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è —É—Å–ø–µ—à–Ω–∞!",
                    description=f"**StaticID:** {static_id_value}\n**Nickname:** {nickname_value}\n\n**–ü–µ—Ä–∏–æ–¥ –∏–≤–µ–Ω—Ç–∞:** {format_event_dates()}",
                    color=config.RASPBERRY_COLOR
                )
                embed.add_field(
                    name="üì© –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤",
                    value="–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç—É –≤–æ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –∏–≤–µ–Ω—Ç–∞.",
                    inline=False
                )
                await interaction.response.send_message(embed=embed, ephemeral=True)
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –õ–°
                try:
                    dm_embed = discord.Embed(
                        title="üéâ –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∏–≤–µ–Ω—Ç –ø–æ–∏—Å–∫–∞ –ª–æ–∫–∞—Ü–∏–π!",
                        description=f"–ü—Ä–∏–≤–µ—Ç, **{nickname_value}**!\n\n–í—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã —Å StaticID: `{static_id_value}`\n\n**–ö–∞–∫ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å:**\n‚Ä¢ –û—Ç–ø—Ä–∞–≤–ª—è–π—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –ª–æ–∫–∞—Ü–∏–π –≤ —ç—Ç–æ—Ç —á–∞—Ç\n‚Ä¢ –ö–∞–∂–¥—ã–π –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç = $10,000\n‚Ä¢ –ò–≤–µ–Ω—Ç –ø—Ä–æ—Ö–æ–¥–∏—Ç: {format_event_dates()}\n\n–£–¥–∞—á–∏ –≤ –ø–æ–∏—Å–∫–∞—Ö! üîç",
                        color=config.RASPBERRY_COLOR
                    )
                    await interaction.user.send(embed=dm_embed)
                except:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–°
            else:
                await interaction.response.send_message("‚ùå –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", ephemeral=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.", ephemeral=True)

class RegistrationView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=None)

    @discord.ui.button(label="üìù –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è", style=discord.ButtonStyle.primary)
    async def register_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        """–ö–Ω–æ–ø–∫–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏."""
        try:
            player = database.get_player(interaction.user.id)
            if player:
                await interaction.response.send_message("‚ùå –í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!", ephemeral=True)
                return
            
            modal = RegistrationModal()
            await interaction.response.send_modal(modal)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –∫–Ω–æ–ø–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

# –ö–ª–∞—Å—Å—ã –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
class ScreenshotSelect(discord.ui.Select):
    def __init__(self, submissions, player_info):
        self.submissions = submissions
        self.player_info = player_info
        
        options = []
        for i, sub in enumerate(submissions[:25]):  # Discord limit 25
            timestamp = datetime.datetime.fromisoformat(sub['submission_time'])
            date_str = timestamp.strftime("%d.%m %H:%M")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–¥–æ–±—Ä–µ–Ω–∏—è
            if sub.get('is_approved') == 1 or sub.get('is_approved') is True:
                status_emoji = "‚úÖ"
                status_text = "–û–¥–æ–±—Ä–µ–Ω"
            elif sub.get('is_approved') == 0 or sub.get('is_approved') is False:
                status_emoji = "‚ùå"
                status_text = "–û—Ç–∫–ª–æ–Ω–µ–Ω"
            else:
                status_emoji = "‚è≥"
                status_text = "–ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"
            
            label = f"–°–∫—Ä–∏–Ω—à–æ—Ç #{i+1} ({date_str})"
            description = f"{status_emoji} {status_text}"
            
            options.append(discord.SelectOption(
                label=label[:100],
                description=description[:100], 
                value=str(sub['submission_id'])
            ))
        
        placeholder = "–í—ã–±–µ—Ä–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞..." if options else "–ù–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤"
        
        super().__init__(
            placeholder=placeholder,
            options=options if options else [discord.SelectOption(label="–ü—É—Å—Ç–æ", value="0")],
            disabled=not options
        )

    async def callback(self, interaction: discord.Interaction):
        try:
            if self.disabled:
                return
                
            submission_id = int(self.values[0])
            submission = database.get_submission_by_id(submission_id)
            
            if not submission:
                await interaction.response.send_message("‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return
            
            timestamp = datetime.datetime.fromisoformat(submission['submission_time'])
            date_str = timestamp.strftime("%d.%m.%Y –≤ %H:%M")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –æ–¥–æ–±—Ä–µ–Ω–∏—è
            if submission.get('is_approved') == 1 or submission.get('is_approved') is True:
                status_text = "‚úÖ –û–¥–æ–±—Ä–µ–Ω"
            elif submission.get('is_approved') == 0 or submission.get('is_approved') is False:
                status_text = "‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω"
            else:
                status_text = "‚è≥ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏"
            
            embed = discord.Embed(
                title=f"üì∏ –°–∫—Ä–∏–Ω—à–æ—Ç #{submission_id}",
                description=f"**–ò–≥—Ä–æ–∫:** {self.player_info['nickname']}\n**–î–∞—Ç–∞:** {date_str}\n**–°—Ç–∞—Ç—É—Å:** {status_text}",
                color=config.RASPBERRY_COLOR
            )
            embed.set_image(url=submission['screenshot_url'])
            
            # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–æ–≤
            view = None
            if interaction.user.guild_permissions.administrator:
                view = ScreenshotModerationView(submission_id, submission.get('is_approved', False))
            
            await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

class RejectReasonModal(discord.ui.Modal):
    def __init__(self, submission_id, view):
        super().__init__(title="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞")
        self.submission_id = submission_id
        self.view = view
        
        self.reason = discord.ui.InputText(
            label="–ü—Ä–∏—á–∏–Ω–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è",
            placeholder="–û–ø–∏—à–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–Ω—à–æ—Ç–∞...",
            style=discord.InputTextStyle.paragraph,
            required=True,
            max_length=500
        )
        self.add_item(self.reason)

    async def callback(self, interaction: discord.Interaction):
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –∏ –∏–≥—Ä–æ–∫–∞
            submission = database.get_submission_by_id(self.submission_id)
            if not submission:
                await interaction.response.send_message("‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return
            
            player = database.get_player(submission['discord_id'])
            if not player:
                await interaction.response.send_message("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return
            
            # –û—Ç–∫–ª–æ–Ω—è–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç
            success = database.reject_screenshot(self.submission_id)
            if success:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É
                notification_sent = False
                try:
                    user = bot.get_user(submission['discord_id'])
                    if user is None:
                        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ fetch
                        user = await bot.fetch_user(submission['discord_id'])
                    
                    if user:
                        # –ü–æ–ª—É—á–∞–µ–º –ª–∏—á–Ω—ã–π –Ω–æ–º–µ—Ä —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –∏–≥—Ä–æ–∫–∞
                        personal_number = database.get_player_screenshot_number(submission['discord_id'], self.submission_id)
                        embed = discord.Embed(
                            title="‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω",
                            description=f"**–í–∞—à {personal_number}-–π —Å–∫—Ä–∏–Ω—à–æ—Ç** –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.\n\n**–ü—Ä–∏—á–∏–Ω–∞:** {self.reason.value}\n\n–í—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤—ã–π —Å–∫—Ä–∏–Ω—à–æ—Ç.",
                            color=0xFF0000
                        )
                        embed.set_image(url=submission['screenshot_url'])
                        await user.send(embed=embed)
                        notification_sent = True
                        print(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.name}")
                    else:
                        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {submission['discord_id']}")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏: {e}")
                    print(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
                    print(f"–î–µ—Ç–∞–ª–∏: {str(e)}")
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ
                status_message = f"‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –æ—Ç–∫–ª–æ–Ω–µ–Ω!\n–ü—Ä–∏—á–∏–Ω–∞: {self.reason.value}"
                if notification_sent:
                    status_message += "\n–ò–≥—Ä–æ–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ."
                else:
                    status_message += "\n‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É."
                
                await interaction.response.send_message(status_message, ephemeral=True)
            else:
                await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–∏.", ephemeral=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

class ScreenshotModerationView(discord.ui.View):
    def __init__(self, submission_id, current_status):
        super().__init__(timeout=300)
        self.submission_id = submission_id
        self.current_status = current_status
    
    async def update_parent_stats_if_needed(self, interaction):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ admin_stats –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ"""
        try:
            # –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –±—ã—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω –≤ –±—É–¥—É—â–µ–º –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏
            pass
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")

    @discord.ui.button(label="‚úÖ –û–¥–æ–±—Ä–∏—Ç—å", style=discord.ButtonStyle.success)
    async def approve_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –∏ –∏–≥—Ä–æ–∫–∞
            submission = database.get_submission_by_id(self.submission_id)
            if not submission:
                await interaction.response.send_message("‚ùå –°–∫—Ä–∏–Ω—à–æ—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return
            
            player = database.get_player(submission['discord_id'])
            if not player:
                await interaction.response.send_message("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return
            
            success = database.approve_screenshot(self.submission_id)
            if success:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É
                notification_sent = False
                try:
                    user = bot.get_user(submission['discord_id'])
                    if user is None:
                        # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ fetch
                        user = await bot.fetch_user(submission['discord_id'])
                    
                    if user:
                        # –ü–æ–ª—É—á–∞–µ–º –ª–∏—á–Ω—ã–π –Ω–æ–º–µ—Ä —Å–∫—Ä–∏–Ω—à–æ—Ç–∞ –∏–≥—Ä–æ–∫–∞
                        personal_number = database.get_player_screenshot_number(submission['discord_id'], self.submission_id)
                        embed = discord.Embed(
                            title="‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –æ–¥–æ–±—Ä–µ–Ω!",
                            description=f"**–í–∞—à {personal_number}-–π —Å–∫—Ä–∏–Ω—à–æ—Ç** –±—ã–ª –æ–¥–æ–±—Ä–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º!\n\n–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏—Å–∫–∞—Ç—å –ª–æ–∫–∞—Ü–∏–∏!",
                            color=config.RASPBERRY_COLOR
                        )
                        embed.set_image(url=submission['screenshot_url'])
                        await user.send(embed=embed)
                        notification_sent = True
                        print(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user.name}")
                    else:
                        print(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å ID {submission['discord_id']}")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ–± –æ–¥–æ–±—Ä–µ–Ω–∏–∏: {e}")
                    print(f"–¢–∏–ø –æ—à–∏–±–∫–∏: {type(e).__name__}")
                    print(f"–î–µ—Ç–∞–ª–∏: {str(e)}")
                
                # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ—Å–ª–µ –æ–¥–æ–±—Ä–µ–Ω–∏—è
                button.disabled = True
                button.style = discord.ButtonStyle.secondary
                button.label = "‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ"
                
                # –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è
                for item in self.children:
                    if item.label and "–û—Ç–∫–ª–æ–Ω–∏—Ç—å" in item.label:
                        item.disabled = True
                        item.style = discord.ButtonStyle.secondary
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —É—Å–ø–µ—Ö–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
                status_message = "‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –æ–¥–æ–±—Ä–µ–Ω!"
                if notification_sent:
                    status_message += "\n–ò–≥—Ä–æ–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ."
                else:
                    status_message += "\n‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É."
                
                await interaction.response.edit_message(view=self)
                await interaction.followup.send(status_message, ephemeral=True)
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏ admin_stats –µ—Å–ª–∏ –æ–Ω–æ –µ—Å—Ç—å
                await self.update_parent_stats_if_needed(interaction)
            else:
                await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏.", ephemeral=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ–¥–æ–±—Ä–µ–Ω–∏—è: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

    @discord.ui.button(label="‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å", style=discord.ButtonStyle.danger)
    async def reject_button(self, button: discord.ui.Button, interaction: discord.Interaction):
        try:
            modal = RejectReasonModal(self.submission_id, self)
            await interaction.response.send_modal(modal)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

class PlayerSelect(discord.ui.Select):
    def __init__(self, players_data, page=0):
        self.page = page
        self.players_per_page = 25
        self.total_players = len(players_data)
        self.total_pages = max(1, (self.total_players - 1) // self.players_per_page + 1)
        
        # –ü–æ–ª—É—á–∞–µ–º –∏–≥—Ä–æ–∫–æ–≤ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        start_idx = page * self.players_per_page
        end_idx = start_idx + self.players_per_page
        current_page_players = players_data[start_idx:end_idx]
        
        options = []
        for player in current_page_players:
            discord_id, nickname, screenshot_count = player
            display_name = get_user_tag(discord_id)
            
            # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –∏–≥—Ä–æ–∫–∞
            submissions = database.get_player_submissions(discord_id)
            approved_count = len([s for s in submissions if s['is_approved'] == 1 or s['is_approved'] is True])
            rejected_count = len([s for s in submissions if s['is_approved'] == 0 or s['is_approved'] is False])
            pending_count = len([s for s in submissions if s['is_approved'] is None])
            
            label = f"{nickname} ({display_name})"
            
            # –§–æ—Ä–º–∏—Ä—É–µ–º –æ–ø–∏—Å–∞–Ω–∏–µ —Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π –º–æ–¥–µ—Ä–∞—Ü–∏–∏
            if screenshot_count == 0:
                description = "–ù–µ—Ç —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤"
            else:
                description = f"‚úÖ{approved_count} ‚ùå{rejected_count} ‚è≥{pending_count}"
                if pending_count > 0:
                    description += " ‚Ä¢ –¢–†–ï–ë–£–ï–¢ –ú–û–î–ï–†–ê–¶–ò–ò"
            
            options.append(discord.SelectOption(
                label=label[:100],
                description=description[:100],
                value=str(discord_id)
            ))
        
        placeholder = f"–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä–æ–∫–∞ (—Å—Ç—Ä. {page + 1}/{self.total_pages})..." if options else "–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤"
        
        super().__init__(
            placeholder=placeholder,
            options=options if options else [discord.SelectOption(label="–ü—É—Å—Ç–æ", value="0")],
            disabled=not options
        )

    async def callback(self, interaction: discord.Interaction):
        try:
            if self.disabled:
                return
                
            selected_discord_id = int(self.values[0])
            player = database.get_player(selected_discord_id)
            if not player:
                await interaction.response.send_message("‚ùå –ò–≥—Ä–æ–∫ –Ω–µ –Ω–∞–π–¥–µ–Ω.", ephemeral=True)
                return
            
            submissions = database.get_player_submissions(selected_discord_id)
            approved_count = len([s for s in submissions if s.get('is_approved') == 1 or s.get('is_approved') is True])
            rejected_count = len([s for s in submissions if s.get('is_approved') == 0 or s.get('is_approved') is False])
            pending_count = len([s for s in submissions if s.get('is_approved') is None])
            
            embed = discord.Embed(
                title=f"üë§ –ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞",
                color=config.RASPBERRY_COLOR
            )
            embed.add_field(name="–ù–∏–∫–Ω–µ–π–º", value=player['nickname'], inline=True)
            embed.add_field(name="Discord", value=get_user_tag(selected_discord_id), inline=True)
            embed.add_field(name="StaticID", value=player['static_id'], inline=True)
            embed.add_field(name="‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ", value=str(approved_count), inline=True)
            embed.add_field(name="‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ", value=str(rejected_count), inline=True)
            embed.add_field(name="‚è≥ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏", value=str(pending_count), inline=True)
            embed.add_field(name="–°—Ç–∞—Ç—É—Å", value="‚ùå –î–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" if player['is_disqualified'] else "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω", inline=True)
            
            # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–±–æ—Ä —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
            view = None
            if submissions:
                view = PlayerProfileView(submissions, player)
            
            await interaction.response.send_message(embed=embed, view=view, ephemeral=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤—ã–±–æ—Ä–∞ –∏–≥—Ä–æ–∫–∞: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

class PlayerProfileView(discord.ui.View):
    def __init__(self, submissions, player_info):
        super().__init__(timeout=300)
        self.add_item(ScreenshotSelect(submissions, player_info))

class PlayerListView(discord.ui.View):
    def __init__(self, players_data):
        super().__init__(timeout=300)
        self.players_data = players_data
        self.current_page = 0
        self.total_pages = max(1, (len(players_data) - 1) // 25 + 1)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–ø–∞–¥–∞—é—â–∏–π —Å–ø–∏—Å–æ–∫ –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        self.player_select = PlayerSelect(players_data, self.current_page)
        self.add_item(self.player_select)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –±–æ–ª—å—à–µ –æ–¥–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        if self.total_pages > 1:
            self.update_navigation_buttons()
    
    def update_navigation_buttons(self):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏"""
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–µ –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        items_to_remove = []
        for item in self.children:
            if hasattr(item, 'custom_id') and item.custom_id in ['prev_page', 'next_page']:
                items_to_remove.append(item)
        
        for item in items_to_remove:
            self.remove_item(item)
        
        # –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏
        prev_button = discord.ui.Button(
            style=discord.ButtonStyle.secondary,
            label="‚óÄ –ü—Ä–µ–¥—ã–¥—É—â–∞—è",
            disabled=self.current_page <= 0,
            custom_id='prev_page'
        )
        prev_button.callback = self.prev_page
        
        next_button = discord.ui.Button(
            style=discord.ButtonStyle.secondary,
            label="–°–ª–µ–¥—É—é—â–∞—è ‚ñ∂",
            disabled=self.current_page >= self.total_pages - 1,
            custom_id='next_page'
        )
        next_button.callback = self.next_page
        
        self.add_item(prev_button)
        self.add_item(next_button)
    
    async def prev_page(self, interaction: discord.Interaction):
        """–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
        if self.current_page > 0:
            self.current_page -= 1
            await self.update_page(interaction)
    
    async def next_page(self, interaction: discord.Interaction):
        """–ü–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É"""
        if self.current_page < self.total_pages - 1:
            self.current_page += 1
            await self.update_page(interaction)
    
    async def update_page(self, interaction: discord.Interaction):
        """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ç—Ä–∞–Ω–∏—Ü—É —Å –Ω–æ–≤—ã–º —Å–ø–∏—Å–∫–æ–º –∏–≥—Ä–æ–∫–æ–≤"""
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π select
        self.remove_item(self.player_select)
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π select –¥–ª—è —Ç–µ–∫—É—â–µ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        self.player_select = PlayerSelect(self.players_data, self.current_page)
        self.add_item(self.player_select)
        
        # –û–±–Ω–æ–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏
        self.update_navigation_buttons()
        
        # –ü–æ–ª—É—á–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ embed —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        original_embed = interaction.message.embeds[0] if interaction.message.embeds else None
        
        await interaction.response.edit_message(embed=original_embed, view=self)

@bot.event
async def on_ready():
    """–°–æ–±—ã—Ç–∏–µ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞."""
    print(f'{bot.user} –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ Discord!')
    database.setup_database()
    print("–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞.")

@bot.slash_command(name='start', description='–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –Ω–∞ –∏–≤–µ–Ω—Ç –ø–æ–∏—Å–∫–∞ –ª–æ–∫–∞—Ü–∏–π', guild_ids=[config.GUILD_ID])
async def start_registration(ctx):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –∏–≤–µ–Ω—Ç."""
    try:
        embed = discord.Embed(
            title="***–ò–≤–µ–Ω—Ç –ø–æ–∏—Å–∫–∞ –ª–æ–∫–∞—Ü–∏–π***",
            description="–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –Ω–∞ –∏–≤–µ–Ω—Ç!",
            color=config.RASPBERRY_COLOR
        )
        
        view = RegistrationView()
        await ctx.respond(embed=embed, view=view, ephemeral=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /start: {e}")
        await ctx.respond("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

@bot.event
async def on_message(message):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö (–ø—Ä–∏–µ–º —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤)."""
    try:
        if message.guild is not None or message.author == bot.user:
            return
        
        player = database.get_player(message.author.id)
        if not player:
            return
        
        if database.is_player_disqualified(message.author.id):
            await message.reply("‚ùå –í—ã –±—ã–ª–∏ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã.")
            return
        
        if not is_event_active():
            await message.reply("‚è∞ –°–æ–±—ã—Ç–∏–µ —Å–µ–π—á–∞—Å –Ω–µ–∞–∫—Ç–∏–≤–Ω–æ.")
            return
        
        if not message.attachments:
            return
        
        valid_extensions = ['.png', '.jpg', '.jpeg', '.gif', '.webp']
        attachment = message.attachments[0]
        
        if not any(attachment.filename.lower().endswith(ext) for ext in valid_extensions):
            await message.reply("‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≤ —Ñ–æ—Ä–º–∞—Ç–µ PNG, JPG, JPEG, GIF –∏–ª–∏ WebP.")
            return
        
        success = database.add_submission(message.author.id, attachment.url)
        
        if success:
            submissions = database.get_player_submissions(message.author.id)
            count = len(submissions)
            
            embed = discord.Embed(
                title="‚úÖ –í–∞—à —Å–∫—Ä–∏–Ω—à–æ—Ç –ø—Ä–∏–Ω—è—Ç –≤ –æ–±—Ä–∞–±–æ—Ç–∫—É",
                description=f"–°–∫—Ä–∏–Ω—à–æ—Ç —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∏ –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–∏—Å—Ç–µ–º—É.\n\n**–í—Å–µ–≥–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:** {count} —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤\n**–°—Ç–∞—Ç—É—Å:** ‚è≥ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏\n\n–í—ã –ø–æ–ª—É—á–∏—Ç–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∫–æ–≥–¥–∞ —Å–∫—Ä–∏–Ω—à–æ—Ç –±—É–¥–µ—Ç –ø—Ä–æ–≤–µ—Ä–µ–Ω.",
                color=config.RASPBERRY_COLOR
            )
            embed.set_image(url=attachment.url)
            
            await message.reply(embed=embed)
        else:
            await message.reply("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: {e}")

async def has_admin_permissions(ctx) -> bool:
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ."""
    if not ctx.guild:
        return False
    
    if not ctx.author.guild_permissions.administrator:
        await ctx.respond("‚ùå –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.", ephemeral=True)
        return False
    
    return True

@bot.slash_command(name='admin_stats', description='–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≤–µ–Ω—Ç–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)', guild_ids=[config.GUILD_ID])
async def admin_stats(ctx):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏–≤–µ–Ω—Ç–∞."""
    try:
        if not await has_admin_permissions(ctx):
            return
        
        total_players = database.get_all_players_stats()
        leaderboard_by_approved = database.get_leaderboard_by_approved()
        approved_stats = database.get_approved_screenshots_stats()
        
        # –°—á–∏—Ç–∞–µ–º –æ–±—â—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
        total_submissions = sum(player[2] for player in leaderboard_by_approved)
        total_approved = sum(player[3] for player in leaderboard_by_approved)
        
        embed = discord.Embed(
            title="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–≤–µ–Ω—Ç–∞",
            color=config.RASPBERRY_COLOR
        )
        embed.add_field(name="üë• –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤", value=str(total_players), inline=True)
        embed.add_field(name="üì∏ –í—Å–µ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤", value=str(total_submissions), inline=True)
        embed.add_field(name="‚úÖ –û–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤", value=str(total_approved), inline=True)
        embed.add_field(name="üìÖ –ü–µ—Ä–∏–æ–¥ –∏–≤–µ–Ω—Ç–∞", value=format_event_dates(), inline=False)
        embed.add_field(name="‚è∞ –°—Ç–∞—Ç—É—Å", value="üü¢ –ê–∫—Ç–∏–≤–µ–Ω" if is_event_active() else "üî¥ –ù–µ–∞–∫—Ç–∏–≤–µ–Ω", inline=True)
        
        # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ø-5 –∏–≥—Ä–æ–∫–æ–≤ –ø–æ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–º —Å–∫—Ä–∏–Ω—à–æ—Ç–∞–º
        if leaderboard_by_approved:
            top_players = leaderboard_by_approved[:5]
            top_text = ""
            for i, (discord_id, nickname, total_screenshots, approved_count) in enumerate(top_players, 1):
                user_tag = get_user_tag(discord_id)
                top_text += f"{i}. {nickname} ({user_tag}) - {approved_count} –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö ({total_screenshots} –≤—Å–µ–≥–æ)\n"
            embed.add_field(name="üèÜ –¢–æ–ø-5 –∏–≥—Ä–æ–∫–æ–≤ (–ø–æ –æ–¥–æ–±—Ä–µ–Ω–Ω—ã–º)", value=top_text or "–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö", inline=False)
        
        # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –≤—ã–ø–∞–¥–∞—é—â–µ–≥–æ —Å–ø–∏—Å–∫–∞ (discord_id, nickname, total_count)
        player_list_data = [(player[0], player[1], player[2]) for player in leaderboard_by_approved]
        view = PlayerListView(player_list_data) if player_list_data else None
        await ctx.respond(embed=embed, view=view, ephemeral=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /admin_stats: {e}")
        await ctx.respond("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

@bot.slash_command(name='admin_profile', description='–ü—Ä–æ—Å–º–æ—Ç—Ä –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)', guild_ids=[config.GUILD_ID])
async def admin_profile(ctx, user: discord.Member):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø—Ä–æ—Ñ–∏–ª—è –∏–≥—Ä–æ–∫–∞."""
    try:
        if not await has_admin_permissions(ctx):
            return
        
        player = database.get_player(user.id)
        if not player:
            await ctx.respond(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.", ephemeral=True)
            return
        
        submissions = database.get_player_submissions(user.id)
        approved_count = len([s for s in submissions if s.get('is_approved') == 1 or s.get('is_approved') is True])
        rejected_count = len([s for s in submissions if s.get('is_approved') == 0 or s.get('is_approved') is False])
        pending_count = len([s for s in submissions if s.get('is_approved') is None])
        
        embed = discord.Embed(
            title=f"üë§ –ü—Ä–æ—Ñ–∏–ª—å –∏–≥—Ä–æ–∫–∞",
            color=config.RASPBERRY_COLOR
        )
        embed.add_field(name="–ù–∏–∫–Ω–µ–π–º", value=player['nickname'], inline=True)
        embed.add_field(name="Discord", value=f"@{user.name}", inline=True)
        embed.add_field(name="StaticID", value=player['static_id'], inline=True)
        embed.add_field(name="‚úÖ –û–¥–æ–±—Ä–µ–Ω–æ", value=str(approved_count), inline=True)
        embed.add_field(name="‚ùå –û—Ç–∫–ª–æ–Ω–µ–Ω–æ", value=str(rejected_count), inline=True)
        embed.add_field(name="‚è≥ –ù–∞ –º–æ–¥–µ—Ä–∞—Ü–∏–∏", value=str(pending_count), inline=True)
        embed.add_field(name="–°—Ç–∞—Ç—É—Å", value="‚ùå –î–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω" if player['is_disqualified'] else "‚úÖ –ê–∫—Ç–∏–≤–µ–Ω", inline=True)
        
        view = PlayerProfileView(submissions, player) if submissions else None
        await ctx.respond(embed=embed, view=view, ephemeral=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /admin_profile: {e}")
        await ctx.respond("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

@bot.slash_command(name='admin_disqualify', description='–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –∏–≥—Ä–æ–∫–∞ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)', guild_ids=[config.GUILD_ID])
async def admin_disqualify(ctx, user: discord.Member, action: discord.Option(str, "–î–µ–π—Å—Ç–≤–∏–µ", choices=["disqualify", "cancel"])):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏/—Å–Ω—è—Ç–∏—è –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏ –∏–≥—Ä–æ–∫–∞."""
    try:
        if not await has_admin_permissions(ctx):
            return
        
        player = database.get_player(user.id)
        if not player:
            await ctx.respond(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {user.mention} –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω.", ephemeral=True)
            return
        
        if action == "disqualify":
            if player['is_disqualified']:
                await ctx.respond(f"‚ùå –ò–≥—Ä–æ–∫ {user.mention} —É–∂–µ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω.", ephemeral=True)
                return
                
            if database.disqualify_player(user.id):
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É –æ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏
                try:
                    dm_embed = discord.Embed(
                        title="‚ùå –î–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è",
                        description=f"–í—ã –±—ã–ª–∏ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω—ã —Å –∏–≤–µ–Ω—Ç–∞.\n\n–í–∞—à–∏ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –±–æ–ª—å—à–µ –Ω–µ —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –≤ –∫–æ–Ω–∫—É—Ä—Å–µ.",
                        color=0xFF0000
                    )
                    await user.send(embed=dm_embed)
                except:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–°
                
                embed = discord.Embed(
                    title="‚ùå –ò–≥—Ä–æ–∫ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω",
                    description=f"**–ò–≥—Ä–æ–∫:** {player['nickname']} ({user.mention})\n**StaticID:** {player['static_id']}\n\n–í—Å–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã –∏–≥—Ä–æ–∫–∞ –ø–æ–º–µ—á–µ–Ω—ã –∫–∞–∫ –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ.\n–ò–≥—Ä–æ–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.",
                    color=0xFF0000
                )
                await ctx.respond(embed=embed, ephemeral=True)
            else:
                await ctx.respond("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏.", ephemeral=True)
                
        elif action == "cancel":
            if not player['is_disqualified']:
                await ctx.respond(f"‚ùå –ò–≥—Ä–æ–∫ {user.mention} –Ω–µ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω.", ephemeral=True)
                return
                
            if database.cancel_disqualification(user.id):
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É –æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏
                try:
                    dm_embed = discord.Embed(
                        title="‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ",
                        description=f"–í–∞—à–∞ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è —Å –∏–≤–µ–Ω—Ç–∞ –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.\n\n–í—ã —Å–Ω–æ–≤–∞ –º–æ–∂–µ—Ç–µ —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ –∫–æ–Ω–∫—É—Ä—Å–µ!",
                        color=config.RASPBERRY_COLOR
                    )
                    await user.send(embed=dm_embed)
                except:
                    pass  # –ò–≥–Ω–æ—Ä–∏—Ä—É–µ–º –æ—à–∏–±–∫—É –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –õ–°
                
                embed = discord.Embed(
                    title="‚úÖ –î–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏—è –æ—Ç–º–µ–Ω–µ–Ω–∞",
                    description=f"**–ò–≥—Ä–æ–∫:** {player['nickname']} ({user.mention})\n**StaticID:** {player['static_id']}\n\n–ò–≥—Ä–æ–∫ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ –∫–æ–Ω–∫—É—Ä—Å–µ.\n–í—Å–µ –µ–≥–æ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã —Å–Ω–æ–≤–∞ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã.\n–ò–≥—Ä–æ–∫—É –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ.",
                    color=config.RASPBERRY_COLOR
                )
                await ctx.respond(embed=embed, ephemeral=True)
            else:
                await ctx.respond("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–º–µ–Ω–µ –¥–∏—Å–∫–≤–∞–ª–∏—Ñ–∏–∫–∞—Ü–∏–∏.", ephemeral=True)
                
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /admin_disqualify: {e}")
        await ctx.respond("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

@bot.slash_command(name='calculate', description='–†–∞—Å—á–µ—Ç –≤—ã–ø–ª–∞—Ç –¥–ª—è –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)', guild_ids=[config.GUILD_ID])
async def calculate_payments(ctx):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞ –≤—ã–ø–ª–∞—Ç."""
    try:
        if not await has_admin_permissions(ctx):
            return
        
        approved_stats = database.get_approved_screenshots_stats()
        
        if not approved_stats:
            await ctx.respond("‚ùå –ù–µ—Ç –æ–¥–æ–±—Ä–µ–Ω–Ω—ã—Ö —Å–∫—Ä–∏–Ω—à–æ—Ç–æ–≤ –¥–ª—è —Ä–∞—Å—á–µ—Ç–∞.", ephemeral=True)
            return
        
        embed = discord.Embed(
            title="üí∞ –†–∞—Å—á–µ—Ç –≤—ã–ø–ª–∞—Ç",
            description="–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–¥–∞—á–∏ –¥–µ–Ω–µ–≥ —É—á–∞—Å—Ç–Ω–∏–∫–∞–º:",
            color=config.RASPBERRY_COLOR
        )
        
        commands_text = ""
        total_amount = 0
        
        for discord_id, nickname, static_id, approved_count in approved_stats:
            amount = approved_count * 10000
            total_amount += amount
            commands_text += f"/givemoney {static_id} {amount} EventMagic\n"
        
        embed.add_field(name="üìã –ö–æ–º–∞–Ω–¥—ã", value=f"```{commands_text}```", inline=False)
        embed.add_field(name="üíµ –û–±—â–∞—è —Å—É–º–º–∞", value=f"{total_amount:,} $", inline=True)
        embed.add_field(name="üë• –£—á–∞—Å—Ç–Ω–∏–∫–æ–≤", value=str(len(approved_stats)), inline=True)
        
        await ctx.respond(embed=embed, ephemeral=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /calculate: {e}")
        await ctx.respond("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

@bot.slash_command(name='reset_stats', description='–ü–æ–ª–Ω—ã–π —Å–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∏ –ø—Ä–æ—Ñ–∏–ª–µ–π (—Ç–æ–ª—å–∫–æ –¥–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤)', guild_ids=[config.GUILD_ID])
async def reset_statistics(ctx):
    """–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤—Å–µ—Ö —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫."""
    try:
        if not await has_admin_permissions(ctx):
            return
        
        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–µ–π—Å—Ç–≤–∏—è
        embed = discord.Embed(
            title="‚ö†Ô∏è –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–±—Ä–æ—Å–∞",
            description="–í—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—Ç–∏—Ç–µ –æ—á–∏—Å—Ç–∏—Ç—å –í–°–Æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∏–≤–µ–Ω—Ç–∞?\n\n**–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ:**\n‚Ä¢ –£–¥–∞–ª–∏—Ç –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∏–≥—Ä–æ–∫–æ–≤\n‚Ä¢ –£–¥–∞–ª–∏—Ç –≤—Å–µ —Å–∫—Ä–∏–Ω—à–æ—Ç—ã\n‚Ä¢ –û—á–∏—Å—Ç–∏—Ç –≤—Å—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É\n\n**–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –ù–ï–û–ë–†–ê–¢–ò–ú–û!**",
            color=0xFF0000
        )
        
        view = ResetConfirmationView()
        await ctx.respond(embed=embed, view=view, ephemeral=True)
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã /reset_stats: {e}")
        await ctx.respond("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

class ResetConfirmationView(discord.ui.View):
    def __init__(self):
        super().__init__(timeout=60)

    @discord.ui.button(label="‚úÖ –î–∞, –æ—á–∏—Å—Ç–∏—Ç—å", style=discord.ButtonStyle.danger)
    async def confirm_reset(self, button: discord.ui.Button, interaction: discord.Interaction):
        try:
            success = database.reset_all_statistics()
            if success:
                embed = discord.Embed(
                    title="‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–±—Ä–æ—à–µ–Ω–∞",
                    description="–í—Å–µ –¥–∞–Ω–Ω—ã–µ –∏–≤–µ–Ω—Ç–∞ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã.\n–ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ –Ω–æ–≤–æ–º—É –∏–≤–µ–Ω—Ç—É!",
                    color=config.RASPBERRY_COLOR
                )
                await interaction.response.send_message(embed=embed, ephemeral=True)
            else:
                await interaction.response.send_message("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±—Ä–æ—Å–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏.", ephemeral=True)
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–±—Ä–æ—Å–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
            await interaction.response.send_message("‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.", ephemeral=True)

    @discord.ui.button(label="‚ùå –û—Ç–º–µ–Ω–∞", style=discord.ButtonStyle.secondary)
    async def cancel_reset(self, button: discord.ui.Button, interaction: discord.Interaction):
        await interaction.response.send_message("–°–±—Ä–æ—Å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –æ—Ç–º–µ–Ω–µ–Ω.", ephemeral=True)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == "__main__":
    token = config.BOT_TOKEN
    if token == "YOUR_BOT_TOKEN_HERE":
        print("Error: Please set BOT_TOKEN in environment variables")
    else:
        bot.run(token)